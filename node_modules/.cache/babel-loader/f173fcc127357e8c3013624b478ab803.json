{"ast":null,"code":"var _jsxFileName = \"/Users/rahilpatel/Desktop/Programming/Projects/Personal/Coronavirus/covid-19-visualization/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Page from './Figures/states.html';\nimport Plot from 'react-plotly.js';\nimport parse from 'html-react-parser';\nimport countries_json from './Figures/countries.json';\nimport states_json from './Figures/states.json'; //import { data, layout, frames } from './Figures/counties.json'\n\n/*\nlet JsonReader = require('big-json-reader')\nlet reader = new JsonReader(require.resolve('./Figures/counties.json'));\nreader.read(json => {\n  console.log(json)\n}, totalObjects => {\n  console.log(\"totalObjects\", totalObjects);\n  reader.printUsage();\n})\n*/\n\nfunction fetchJSONFile(path, callback) {\n  var httpRequest = new XMLHttpRequest();\n\n  httpRequest.onreadystatechange = function () {\n    if (httpRequest.readyState === 4) {\n      if (httpRequest.status === 200) {\n        console.log('TEST:', httpRequest.responseText);\n        var data = JSON.parse(httpRequest.responseText);\n        if (callback) callback(data);\n      }\n    }\n  };\n\n  httpRequest.open('GET', path);\n  httpRequest.send();\n} // this requests the file and executes a callback with the parsed result once\n//   it is available\n\n\nfetchJSONFile('./Figures/countries.json', function (data) {\n  // do something with your data\n  console.log('JSON:');\n  console.log(data);\n});\nconsole.log(\"Data: \", states_json);\nvar htmlDoc = {\n  __html: Page\n};\nvar bgColors = {\n  \"Default\": \"#81b71a\",\n  \"Blue\": \"#00B1E1\",\n  \"Cyan\": \"#37BC9B\",\n  \"Green\": \"#8CC152\",\n  \"Red\": \"#E9573F\",\n  \"Yellow\": \"#F6BB42\"\n};\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, renderMap(countries_json), renderMap(states_json));\n}\n\nfunction renderHTML() {\n  console.log('Rendering HTML:');\n  console.log(Page.substring(Page.length - 7));\n  console.log(Page.substring(0, 6)); // return Page\n\n  return Page.substring(7, Page.length - 8);\n}\n\nfunction renderMap(json) {\n  console.log(json);\n  console.log(json.data); // var figure = JSON.parse(json)\n  //var plot = Plotly.newPlot('graph-div', figure.data, figure.layout);\n\n  return /*#__PURE__*/React.createElement(Plot, {\n    data: json.data,\n    layout: json.layout,\n    frames: json.frames,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rahilpatel/Desktop/Programming/Projects/Personal/Coronavirus/covid-19-visualization/src/App.js"],"names":["React","Page","Plot","parse","countries_json","states_json","fetchJSONFile","path","callback","httpRequest","XMLHttpRequest","onreadystatechange","readyState","status","console","log","responseText","data","JSON","open","send","htmlDoc","__html","bgColors","App","renderMap","renderHTML","substring","length","json","layout","frames"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,uBAAxB,C,CACA;;AACA;;;;;;;;;;;AAWA,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,QAA7B,EAAuC;AACnC,MAAIC,WAAW,GAAG,IAAIC,cAAJ,EAAlB;;AACAD,EAAAA,WAAW,CAACE,kBAAZ,GAAiC,YAAW;AACxC,QAAIF,WAAW,CAACG,UAAZ,KAA2B,CAA/B,EAAkC;AAC9B,UAAIH,WAAW,CAACI,MAAZ,KAAuB,GAA3B,EAAgC;AAC9BC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,WAAW,CAACO,YAAjC;AACE,YAAIC,IAAI,GAAGC,IAAI,CAACf,KAAL,CAAWM,WAAW,CAACO,YAAvB,CAAX;AACA,YAAIR,QAAJ,EAAcA,QAAQ,CAACS,IAAD,CAAR;AACjB;AACJ;AACJ,GARD;;AASAR,EAAAA,WAAW,CAACU,IAAZ,CAAiB,KAAjB,EAAwBZ,IAAxB;AACAE,EAAAA,WAAW,CAACW,IAAZ;AACH,C,CAED;AACA;;;AACAd,aAAa,CAAC,0BAAD,EAA6B,UAASW,IAAT,EAAc;AACpD;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACH,CAJY,CAAb;AAMAH,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBV,WAAtB;AACA,IAAIgB,OAAO,GAAG;AAACC,EAAAA,MAAM,EAAErB;AAAT,CAAd;AACA,IAAIsB,QAAQ,GAAG;AAAE,aAAW,SAAb;AACK,UAAQ,SADb;AAEK,UAAQ,SAFb;AAGK,WAAS,SAHd;AAIK,SAAO,SAJZ;AAKK,YAAU;AALf,CAAf;;AASA,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIC,SAAS,CAACrB,cAAD,CADb,EAEIqB,SAAS,CAACpB,WAAD,CAFb,CADF;AAMD;;AACD,SAASqB,UAAT,GAAsB;AACpBZ,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAAC0B,SAAL,CAAe1B,IAAI,CAAC2B,MAAL,GAAc,CAA7B,CAAZ;AACAd,EAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAAC0B,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAZ,EAHoB,CAIpB;;AACA,SAAO1B,IAAI,CAAC0B,SAAL,CAAe,CAAf,EAAkB1B,IAAI,CAAC2B,MAAL,GAAc,CAAhC,CAAP;AACD;;AACD,SAASH,SAAT,CAAmBI,IAAnB,EAAyB;AACvBf,EAAAA,OAAO,CAACC,GAAR,CAAYc,IAAZ;AACAf,EAAAA,OAAO,CAACC,GAAR,CAAYc,IAAI,CAACZ,IAAjB,EAFuB,CAGvB;AACA;;AACA,sBACI,oBAAC,IAAD;AACE,IAAA,IAAI,EAAEY,IAAI,CAACZ,IADb;AAEE,IAAA,MAAM,EAAEY,IAAI,CAACC,MAFf;AAGE,IAAA,MAAM,EAAED,IAAI,CAACE,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAOD;;AACD,eAAeP,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Page from './Figures/states.html';\nimport Plot from 'react-plotly.js';\nimport parse from 'html-react-parser'\nimport countries_json from './Figures/countries.json'\nimport states_json from './Figures/states.json'\n//import { data, layout, frames } from './Figures/counties.json'\n/*\nlet JsonReader = require('big-json-reader')\nlet reader = new JsonReader(require.resolve('./Figures/counties.json'));\nreader.read(json => {\n  console.log(json)\n}, totalObjects => {\n  console.log(\"totalObjects\", totalObjects);\n  reader.printUsage();\n})\n*/\n\nfunction fetchJSONFile(path, callback) {\n    var httpRequest = new XMLHttpRequest();\n    httpRequest.onreadystatechange = function() {\n        if (httpRequest.readyState === 4) {\n            if (httpRequest.status === 200) {\n              console.log('TEST:', httpRequest.responseText)\n                var data = JSON.parse(httpRequest.responseText);\n                if (callback) callback(data);\n            }\n        }\n    };\n    httpRequest.open('GET', path);\n    httpRequest.send(); \n}\n\n// this requests the file and executes a callback with the parsed result once\n//   it is available\nfetchJSONFile('./Figures/countries.json', function(data){\n    // do something with your data\n    console.log('JSON:')\n    console.log(data);\n});\n\nconsole.log(\"Data: \", states_json)\nvar htmlDoc = {__html: Page}\nvar bgColors = { \"Default\": \"#81b71a\",\n                    \"Blue\": \"#00B1E1\",\n                    \"Cyan\": \"#37BC9B\",\n                    \"Green\": \"#8CC152\",\n                    \"Red\": \"#E9573F\",\n                    \"Yellow\": \"#F6BB42\",\n};\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      { renderMap(countries_json) }\n      { renderMap(states_json) }\n    </div>\n  );\n}\nfunction renderHTML() {\n  console.log('Rendering HTML:')\n  console.log(Page.substring(Page.length - 7))\n  console.log(Page.substring(0, 6))\n  // return Page\n  return Page.substring(7, Page.length - 8)\n}\nfunction renderMap(json) {\n  console.log(json)\n  console.log(json.data)\n  // var figure = JSON.parse(json)\n  //var plot = Plotly.newPlot('graph-div', figure.data, figure.layout);\n  return (\n      <Plot\n        data={json.data}\n        layout={json.layout}\n        frames={json.frames}\n      />\n    )\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}