{"ast":null,"code":"var _jsxFileName = \"/Users/rahilpatel/Desktop/Programming/Projects/Personal/covid19/covid-19-visualization/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Page from './Figures/states.html';\nimport Plot from 'react-plotly.js';\nimport parse from 'html-react-parser';\nimport countries_json from './Figures/countries.json';\nimport states_json from './Figures/states.json'; // import counties_json from './Figures/counties.json'\n\n/*\nlet JsonReader = require('big-json-reader')\nlet reader = new JsonReader(require.resolve('./Figures/counties.json'));\nreader.read(json => {\n  console.log(json)\n}, totalObjects => {\n  console.log(\"totalObjects\", totalObjects);\n  reader.printUsage();\n})\n*/\n// console.log('Counties:', counties_json)\n// function fetchJSONFile(path, callback) {\n//     var httpRequest = new XMLHttpRequest();\n//     httpRequest.onreadystatechange = function() {\n//         if (httpRequest.readyState === 4) {\n//             if (httpRequest.status === 200) {\n//               console.log('TEST:', httpRequest.responseText)\n//                 var data = JSON.parse(httpRequest.responseText);\n//                 if (callback) callback(data);\n//             }\n//         }\n//     };\n//     httpRequest.open('GET', path);\n//     httpRequest.send(); \n// }\n// this requests the file and executes a callback with the parsed result once\n//   it is available\n// fetchJSONFile('counties.json', function(data){\n//     // do something with your data\n//     console.log('DATA:')\n//     console.log(data);\n// });\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction renderHTML() {\n  console.log('Rendering HTML:');\n  console.log(Page.substring(Page.length - 7));\n  console.log(Page.substring(0, 6)); // return Page\n\n  return Page.substring(7, Page.length - 8);\n}\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countriesVisible: true,\n      statesVisible: false\n    };\n    this.switchMap = this.switchMap.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.switchMap,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"Switch\"), this.state.countriesVisible ? this.renderMap(countries_json) : null);\n  }\n\n  switchMap() {\n    this.setState({\n      countriesVisible: !this.state.countriesVisible,\n      statesVisible: !this.state.statesVisible\n    });\n    console.log('Done ', this.state.statesVisible);\n  }\n\n  renderMap(json) {\n    console.log(json);\n    console.log(json.data); // var figure = JSON.parse(json)\n    //var plot = Plotly.newPlot('graph-div', figure.data, figure.layout);\n\n    return /*#__PURE__*/React.createElement(Plot, {\n      data: json.data,\n      layout: json.layout,\n      frames: json.frames,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rahilpatel/Desktop/Programming/Projects/Personal/covid19/covid-19-visualization/src/App.js"],"names":["React","Page","Plot","parse","countries_json","states_json","App","renderHTML","console","log","substring","length","Map","Component","constructor","props","state","countriesVisible","statesVisible","switchMap","bind","render","renderMap","setState","json","data","layout","frames"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,uBAAxB,C,CACA;;AACA;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AACD,SAASC,UAAT,GAAsB;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACS,SAAL,CAAeT,IAAI,CAACU,MAAL,GAAc,CAA7B,CAAZ;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACS,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAZ,EAHoB,CAIpB;;AACA,SAAOT,IAAI,CAACS,SAAL,CAAe,CAAf,EAAkBT,IAAI,CAACU,MAAL,GAAc,CAAhC,CAAP;AACD;;AAED,MAAMC,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,gBAAgB,EAAE,IAAnB;AAAyBC,MAAAA,aAAa,EAAE;AAAxC,KAAb;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAE,KAAKF,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIG,KAAKH,KAAL,CAAWC,gBAAX,GAA8B,KAAKK,SAAL,CAAelB,cAAf,CAA9B,GAA+D,IAJlE,CADF;AAQD;;AAEDe,EAAAA,SAAS,GAAG;AACV,SAAKI,QAAL,CAAc;AAACN,MAAAA,gBAAgB,EAAE,CAAC,KAAKD,KAAL,CAAWC,gBAA/B;AAAiDC,MAAAA,aAAa,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAA5E,KAAd;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKO,KAAL,CAAWE,aAAhC;AACD;;AAEDI,EAAAA,SAAS,CAACE,IAAD,EAAO;AACdhB,IAAAA,OAAO,CAACC,GAAR,CAAYe,IAAZ;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAYe,IAAI,CAACC,IAAjB,EAFc,CAGd;AACA;;AACA,wBACI,oBAAC,IAAD;AACE,MAAA,IAAI,EAAED,IAAI,CAACC,IADb;AAEE,MAAA,MAAM,EAAED,IAAI,CAACE,MAFf;AAGE,MAAA,MAAM,EAAEF,IAAI,CAACG,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOD;;AAlC+B;;AAsClC,eAAerB,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Page from './Figures/states.html';\nimport Plot from 'react-plotly.js';\nimport parse from 'html-react-parser'\nimport countries_json from './Figures/countries.json'\nimport states_json from './Figures/states.json'\n// import counties_json from './Figures/counties.json'\n/*\nlet JsonReader = require('big-json-reader')\nlet reader = new JsonReader(require.resolve('./Figures/counties.json'));\nreader.read(json => {\n  console.log(json)\n}, totalObjects => {\n  console.log(\"totalObjects\", totalObjects);\n  reader.printUsage();\n})\n*/\n\n// console.log('Counties:', counties_json)\n// function fetchJSONFile(path, callback) {\n//     var httpRequest = new XMLHttpRequest();\n//     httpRequest.onreadystatechange = function() {\n//         if (httpRequest.readyState === 4) {\n//             if (httpRequest.status === 200) {\n//               console.log('TEST:', httpRequest.responseText)\n//                 var data = JSON.parse(httpRequest.responseText);\n//                 if (callback) callback(data);\n//             }\n//         }\n//     };\n//     httpRequest.open('GET', path);\n//     httpRequest.send(); \n// }\n\n// this requests the file and executes a callback with the parsed result once\n//   it is available\n// fetchJSONFile('counties.json', function(data){\n//     // do something with your data\n//     console.log('DATA:')\n//     console.log(data);\n// });\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Map/>\n    </div>\n  );\n}\nfunction renderHTML() {\n  console.log('Rendering HTML:')\n  console.log(Page.substring(Page.length - 7))\n  console.log(Page.substring(0, 6))\n  // return Page\n  return Page.substring(7, Page.length - 8)\n}\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {countriesVisible: true, statesVisible: false}\n    this.switchMap = this.switchMap.bind(this)\n  }\n  render() {\n    return(\n      <div>\n        <button onClick={this.switchMap}>\n          Switch\n        </button>\n        {this.state.countriesVisible ? this.renderMap(countries_json) : null}\n      </div>\n    );\n  }\n\n  switchMap() {\n    this.setState({countriesVisible: !this.state.countriesVisible, statesVisible: !this.state.statesVisible})\n    console.log('Done ', this.state.statesVisible);\n  }\n\n  renderMap(json) {\n    console.log(json)\n    console.log(json.data)\n    // var figure = JSON.parse(json)\n    //var plot = Plotly.newPlot('graph-div', figure.data, figure.layout);\n    return (\n        <Plot\n          data={json.data}\n          layout={json.layout}\n          frames={json.frames}\n        />\n      )\n  }\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}